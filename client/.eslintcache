[{"/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/index.js":"1","/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/App.js":"2","/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/components/pages/About.js":"3","/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/components/pages/Home.js":"4","/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/context/contact/ContactState.js":"5","/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/components/layout/Navbar.js":"6","/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/context/contact/contactContext.js":"7","/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/context/types.js":"8","/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/context/contact/contactReducer.js":"9","/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/components/contacts/ContactForm.js":"10","/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/components/contacts/Contacts.js":"11","/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/components/contacts/ContactItem.js":"12","/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/components/contacts/ContactFilter.js":"13","/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/context/auth/AuthState.js":"14","/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/context/auth/authReducer.js":"15","/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/context/auth/authContext.js":"16","/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/components/auth/Register.js":"17","/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/components/auth/Login.js":"18","/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/context/alert/AlertState.js":"19","/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/context/alert/alertsContext.js":"20","/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/context/alert/alertReducer.js":"21","/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/components/layout/Alerts.js":"22","/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/utils/setAuthToken.js":"23","/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/components/routing/PrivateRoute.js":"24","/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/components/layout/Spinner.js":"25"},{"size":197,"mtime":1612550079026,"results":"26","hashOfConfig":"27"},{"size":1476,"mtime":1612716283937,"results":"28","hashOfConfig":"27"},{"size":382,"mtime":1612630668936,"results":"29","hashOfConfig":"27"},{"size":679,"mtime":1612713613301,"results":"30","hashOfConfig":"27"},{"size":3036,"mtime":1612719319303,"results":"31","hashOfConfig":"27"},{"size":1412,"mtime":1612718638362,"results":"32","hashOfConfig":"27"},{"size":109,"mtime":1612615117101,"results":"33","hashOfConfig":"27"},{"size":883,"mtime":1612717646213,"results":"34","hashOfConfig":"27"},{"size":1739,"mtime":1612719319293,"results":"35","hashOfConfig":"27"},{"size":2185,"mtime":1612624436899,"results":"36","hashOfConfig":"27"},{"size":1370,"mtime":1612718388620,"results":"37","hashOfConfig":"27"},{"size":1280,"mtime":1612718938959,"results":"38","hashOfConfig":"27"},{"size":775,"mtime":1612623606640,"results":"39","hashOfConfig":"27"},{"size":2403,"mtime":1612715845950,"results":"40","hashOfConfig":"27"},{"size":1703,"mtime":1612715844879,"results":"41","hashOfConfig":"27"},{"size":103,"mtime":1612624904150,"results":"42","hashOfConfig":"27"},{"size":2434,"mtime":1612712544531,"results":"43","hashOfConfig":"27"},{"size":1873,"mtime":1612714320604,"results":"44","hashOfConfig":"27"},{"size":881,"mtime":1612631915841,"results":"45","hashOfConfig":"27"},{"size":105,"mtime":1612631408512,"results":"46","hashOfConfig":"27"},{"size":307,"mtime":1612631914227,"results":"47","hashOfConfig":"27"},{"size":496,"mtime":1612632234364,"results":"48","hashOfConfig":"27"},{"size":239,"mtime":1612711794947,"results":"49","hashOfConfig":"27"},{"size":643,"mtime":1612717172885,"results":"50","hashOfConfig":"27"},{"size":300,"mtime":1612718247107,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"rzken5",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"54"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"54"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},"/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/index.js",[],["118","119"],"/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/App.js",[],"/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/components/pages/About.js",["120"],"import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst About = () => {\n  return (\n    <div>\n      <h1>About this app</h1>\n      <p className=\"my-1\">\n        This is a full stack React app for keeping contacts\n      </p>\n      <p className=\"bg-dark p\">\n        <strong>Version: 0.0.1</strong>\n      </p>\n    </div>\n  );\n};\n\nAbout.propTypes = {};\n\nexport default About;","/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/components/pages/Home.js",["121"],"import React, {useContext, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport Contacts from '../contacts/Contacts';\nimport ContactForm from '../contacts/ContactForm';\nimport ContactFilter from '../contacts/ContactFilter';\nimport AuthContext from '../../context/auth/authContext';\n\nconst Home = () => {\n  const authContext = useContext(AuthContext);\n\n  useEffect(() => {\n    authContext.loadUser();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className=\"grid-2\">\n      <div>\n        <ContactForm/>\n      </div>\n      <div>\n        <ContactFilter />\n        <Contacts/>\n      </div>\n    </div>\n  );\n};\n\nHome.propTypes = {};\n\nexport default Home;","/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/context/contact/ContactState.js",["122","123"],"import React, {useReducer} from 'react';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport axios from 'axios';\nimport {\n  ADD_CONTACT,\n  CLEAR_FILTER,\n  FILTER_CONTACTS,\n  UPDATE_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  CONTACT_ERROR,\n  GET_CONTACTS,\n  CLEAR_CONTACTS,\n} from '../types';\nimport PropTypes from 'prop-types';\nimport AuthState from '../auth/AuthState';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: null,\n    current: null,\n    filtered: null,\n    error: null,\n  };\n\n  const [state, dispatch] = useReducer(contactReducer, initialState);\n\n  // Get contacts\n  const getContacts = async () => {\n\n    try {\n      const res = await axios.get('/api/contacts');\n      dispatch({type: GET_CONTACTS, payload: res.data});\n    } catch (err) {\n      dispatch({type: CONTACT_ERROR, payload: err.response.msg});\n    }\n  };\n\n  // Add contact\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n      dispatch({type: ADD_CONTACT, payload: res.data});\n    } catch (err) {\n      dispatch({type: CONTACT_ERROR, payload: err.response.msg});\n    }\n  };\n\n  // Delete contact\n  const deleteContact = async id => {\n    try {\n      const res = await axios.delete(`/api/contacts/${id}`);\n      dispatch({type: DELETE_CONTACT, payload: id});\n    } catch (err) {\n      dispatch({type: CONTACT_ERROR, payload: err.response.msg});\n    }\n\n\n  };\n\n  // Set current contact\n  const setCurrent = contact => {\n    dispatch({type: SET_CURRENT, payload: contact});\n  };\n\n  // Clear current contact\n  const clearCurrent = () => {\n    dispatch({type: CLEAR_CURRENT});\n  };\n\n  // Update contact\n  const updateContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    try {\n      const res = await axios.put(`/api/contacts/${contact._id}`, contact, config);\n      dispatch({type: UPDATE_CONTACT, payload: res.data});\n    } catch (err) {\n      dispatch({type: CONTACT_ERROR, payload: err.response.msg});\n    }\n  };\n\n  // Filter contacts\n  const filterContacts = text => {\n    dispatch({type: FILTER_CONTACTS, payload: text});\n  };\n\n  // Clear filters\n  const clearFilter = () => {\n    dispatch({type: CLEAR_FILTER});\n  };\n\n  // Clear contacts\n  const clearContacts = () => {\n    dispatch({type: CLEAR_CONTACTS});\n  };\n\n  return (\n    <ContactContext.Provider value={{\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      error: state.error,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContacts,\n      clearFilter,\n      getContacts,\n      clearContacts,\n    }}>\n      {props.children}\n    </ContactContext.Provider>\n  );\n};\n\nContactState.propTypes = {\n  children: PropTypes.object,\n};\n\nexport default ContactState;","/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/components/layout/Navbar.js",[],"/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/context/contact/contactContext.js",[],"/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/context/types.js",[],"/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/context/contact/contactReducer.js",["124"],"import {\n  ADD_CONTACT,\n  CLEAR_FILTER,\n  FILTER_CONTACTS,\n  UPDATE_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT, CONTACT_ERROR,\n  GET_CONTACTS, CLEAR_CONTACTS,\n} from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case GET_CONTACTS:\n      return {\n        ...state,\n        contacts: action.payload,\n        loading: false,\n      };\n    case ADD_CONTACT:\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts],\n        loading: false,\n      };\n    case DELETE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.filter(contact => contact._id !== action.payload),\n        loading: false,\n      };\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: action.payload,\n      };\n    case CLEAR_CURRENT:\n      return {\n        ...state,\n        current: null,\n      };\n    case UPDATE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact),\n        loading: false,\n      };\n    case FILTER_CONTACTS:\n      return {\n        ...state,\n        filtered: state.contacts.filter(contact => {\n          const regex = new RegExp(`${action.payload}`, 'gi');\n          return contact.name.match(regex) || contact.email.match(regex);\n        }),\n      };\n    case CLEAR_FILTER:\n      return {\n        ...state,\n        filtered: null,\n      };\n    case CONTACT_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n      };\n    case CLEAR_CONTACTS:\n      return {\n        ...state,\n        contacts: null,\n        filtered: null,\n        error: null,\n        current: null,\n      };\n    default:\n      return state;\n  }\n};","/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/components/contacts/ContactForm.js",["125"],"import React, {useContext, useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport ContactContext from '../../context/contact/contactContext';\n\nconst ContactForm = () => {\n  const contactContext = useContext(ContactContext);\n\n  const {addContact, current, clearCurrent, updateContact} = contactContext;\n\n  useEffect(() => {\n    if (current !== null) {\n      setContact(current);\n    } else {\n      setContact({\n        name: '',\n        email: '',\n        phone: '',\n        type: 'personal',\n      });\n    }\n  }, [contactContext, current]);\n\n  const [contact, setContact] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    type: 'personal',\n  });\n\n  const {name, email, phone, type} = contact;\n\n  const onChange = e => setContact({...contact, [e.target.name]: e.target.value});\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (current === null) {\n      addContact(contact);\n    } else {\n      updateContact(contact);\n      setContact({\n        name: '',\n        email: '',\n        phone: '',\n        type: 'personal',\n      });\n    }\n  };\n\n  const clearAll = () => {\n    clearCurrent();\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <h2 className=\"text-primary\">{current ? 'Edit Contact' : 'Add Contact'}</h2>\n      <input type=\"text\" placeholder=\"Name\" name=\"name\" value={name} onChange={onChange}/>\n      <input type=\"email\" placeholder=\"Email\" name=\"email\" value={email} onChange={onChange}/>\n      <input type=\"text\" placeholder=\"Phone\" name=\"phone\" value={phone} onChange={onChange}/>\n      <h5>Contact Type</h5>\n      <input type=\"radio\" name=\"type\" value=\"personal\" checked={type === 'personal'}\n        onChange={onChange}/> Personal {' '}\n      <input type=\"radio\" name=\"type\" value=\"professional\" checked={type === 'professional'}\n        onChange={onChange}/> Professional {' '}\n      <div>\n        <input type=\"submit\" value={current ? 'Edit Contact' : 'Add Contact'} className=\"btn btn-primary btn-block\"/>\n      </div>\n      {current && <div>\n        <button className=\"btn btn-light btn-block\" onClick={clearAll}>Clear</button>\n      </div>}\n    </form>\n  );\n};\n\nContactForm.propTypes = {};\n\nexport default ContactForm;","/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/components/contacts/Contacts.js",["126"],"import React, {Fragment, useContext, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport ContactContext from '../../context/contact/contactContext';\nimport ContactItem from './ContactItem';\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\nimport Spinner from '../layout/Spinner';\n\nconst Contacts = () => {\n  const contactContext = useContext(ContactContext);\n\n  const {contacts, filtered, getContacts, loading} = contactContext;\n\n  useEffect(() => {\n    getContacts();\n    // eslint-disable-next-line\n  }, []);\n\n  if (contacts !== null && contacts.length === 0 && !loading) {\n    return <h4>Please add a contact</h4>;\n  }\n\n  return (\n    <Fragment>\n      {contacts !== null && !loading ? (\n        <TransitionGroup>\n          {filtered !== null\n            ? filtered.map(contact =>\n              <CSSTransition key={contact._id} timeout={500} classNames='item'>\n                <ContactItem key={contact._id} contact={contact}/>\n              </CSSTransition>,\n            )\n            : contacts.map(contact =>\n              <CSSTransition key={contact._id} timeout={500} classNames='item'>\n                <ContactItem key={contact._id} contact={contact}/>\n              </CSSTransition>,\n            )}\n        </TransitionGroup>\n      ) : <Spinner/>}\n    </Fragment>\n  );\n};\n\nContacts.propTypes = {};\n\nexport default Contacts;","/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/components/contacts/ContactItem.js",[],"/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/components/contacts/ContactFilter.js",["127"],"import React, {useContext, useEffect, useRef} from 'react';\nimport PropTypes from 'prop-types';\nimport ContactContext from '../../context/contact/contactContext';\n\nconst ContactFilter = () => {\n  const contactContext = useContext(ContactContext);\n  const {filterContacts, clearFilter, filtered} = contactContext;\n  const text = useRef('');\n\n  useEffect(() => {\n    if (filtered === null) {\n      text.current.value = '';\n    }\n  });\n\n  const onChange = e => {\n    if (text.current.value !== '') {\n      filterContacts(e.target.value);\n    } else {\n      clearFilter();\n    }\n  };\n\n  return (\n    <form>\n      <input ref={text} type=\"text\" placeholder=\"Filter Contacts...\" onChange={onChange}/>\n    </form>\n  );\n};\n\nContactFilter.propTypes = {};\n\nexport default ContactFilter;","/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/context/auth/AuthState.js",["128","129","130"],"import React, {useReducer} from 'react';\nimport AuthContext from './authContext';\nimport authReducer from './authReducer';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport setAuthToken from '../../utils/setAuthToken';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_ERRORS,\n} from '../types';\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: false,\n    loading: true,\n    error: null,\n    user: null,\n  };\n\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Load User\n  const loadUser = async () => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n\n    try {\n      const res = await axios.get('http://localhost:5000/api/auth');\n\n      dispatch({type: USER_LOADED, payload: res.data});\n    } catch (err) {\n      dispatch({type: AUTH_ERROR});\n    }\n  };\n\n  // Register User\n  const register = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    try {\n      const res = await axios.post('http://localhost:5000/api/users', formData, config);\n      dispatch({type: REGISTER_SUCCESS, payload: res.data});\n\n      loadUser();\n    } catch (err) {\n      dispatch({type: REGISTER_FAIL, payload: err.response.data.msg});\n    }\n  };\n\n  // Login User\n  const login = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    try {\n      const res = await axios.post('http://localhost:5000/api/auth', formData, config);\n      dispatch({type: LOGIN_SUCCESS, payload: res.data});\n\n      loadUser();\n    } catch (err) {\n      dispatch({type: LOGIN_FAIL, payload: err.response.data.msg});\n    }\n  };\n\n  // Logout\n\n  // Clear errors\n  const clearErrors = () => dispatch({type: CLEAR_ERRORS});\n\n  return (\n    <AuthContext.Provider value={{\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      error: state.error,\n      user: state.user,\n      register,\n      clearErrors,\n      loadUser,\n      login,\n    }}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nAuthState.propTypes = {\n  children: PropTypes.object,\n};\n\nexport default AuthState;","/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/context/auth/authReducer.js",["131","132","133","134"],"import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_ERRORS,\n} from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case REGISTER_SUCCESS:\n      localStorage.setItem('token', action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case REGISTER_FAIL:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: true,\n        user: null,\n        error: action.payload,\n      };\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        error: null,\n      };\n    case USER_LOADED:\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case AUTH_ERROR:\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: true,\n        user: null,\n        error: action.payload,\n      };\n    case LOGIN_SUCCESS:\n      localStorage.setItem('token', action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case LOGIN_FAIL:\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: true,\n        user: null,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};","/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/context/auth/authContext.js",[],"/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/components/auth/Register.js",["135"],"import React, {useContext, useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport AlertContext from '../../context/alert/alertsContext';\nimport AuthContext from '../../context/auth/authContext';\n\nconst Register = (props) => {\n  const authContext = useContext(AuthContext);\n  const {register, error, clearErrors, isAuthenticated} = authContext;\n\n  const alertContext = useContext(AlertContext);\n  const {setAlert} = alertContext;\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      // eslint-disable-next-line\n      props.history.push('/');\n    }\n    if (error === 'User already exists') {\n      setAlert(error, 'danger');\n      clearErrors();\n    }\n    // eslint-disable-next-line\n  }, [error, isAuthenticated, props.history]);\n\n  const [user, setUser] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: '',\n  });\n\n  const {name, email, password, password2} = user;\n\n  const onChange = e => setUser({...user, [e.target.name]: e.target.value});\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (name === '' || email === '' || password === '') {\n      setAlert('Please enter all fields', 'danger');\n    } else if (password !== password2) {\n      setAlert('Passwords do not match');\n    } else {\n      register({\n        name,\n        email,\n        password,\n      });\n    }\n  };\n\n  return (\n    <div className='form-container'>\n      <h1>\n        Account <span className='text-primary'>Register</span>\n      </h1>\n      <form onSubmit={onSubmit}>\n        <div className='form-group'>\n          <label htmlFor='name'>Name</label>\n          <input type='text' name='name' value={name} onChange={onChange} />\n        </div>\n        <div className='form-group'>\n          <label htmlFor='email'>Email Address</label>\n          <input type='email' name='email' value={email} onChange={onChange} />\n        </div>\n        <div className='form-group'>\n          <label htmlFor='password2'>Password</label>\n          <input type='password' name='password' value={password} onChange={onChange} />\n        </div>\n        <div className='form-group'>\n          <label htmlFor='password'>Confirm Password</label>\n          <input type='password' name='password2' value={password2} onChange={onChange} />\n        </div>\n        <input type='submit' value='Register' className='btn btn-primary btn-block'/>\n      </form>\n    </div>\n  );\n};\n\nRegister.propTypes = {};\n\nexport default Register;","/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/components/auth/Login.js",["136"],"import React, {useContext, useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport AuthContext from '../../context/auth/authContext';\nimport AlertContext from '../../context/alert/alertsContext';\n\nconst Login = (props) => {\n  const authContext = useContext(AuthContext);\n  const {login, error, clearErrors, isAuthenticated} = authContext;\n\n  const alertContext = useContext(AlertContext);\n  const {setAlert} = alertContext;\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      // eslint-disable-next-line\n      props.history.push('/');\n    }\n    if (error === 'Invalid email' || error === 'Invalid password') {\n      setAlert(error, 'danger');\n      clearErrors();\n    }\n    // eslint-disable-next-line\n  }, [error, isAuthenticated, props.history]);\n\n  const [user, setUser] = useState({\n    email: '',\n    password: '',\n  });\n\n  const {email, password} = user;\n\n  const onChange = e => setUser({...user, [e.target.name]: e.target.value});\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (email === '' || password === '') {\n      setAlert('Please fill in all fields', 'danger');\n    } else {\n      login({email, password});\n    }\n  };\n\n  return (\n    <div className='form-container'>\n      <h1>\n        Account <span className='text-primary'>Login</span>\n      </h1>\n      <form onSubmit={onSubmit}>\n        <div className='form-group'>\n          <label htmlFor='email'>Email Address</label>\n          <input type='email' name='email' value={email} onChange={onChange}/>\n        </div>\n        <div className='form-group'>\n          <label htmlFor='password'>Password</label>\n          <input type='password' name='password' value={password} onChange={onChange}/>\n        </div>\n        <input type='submit' value='Login' className='btn btn-primary btn-block'/>\n      </form>\n    </div>\n  );\n};\n\nLogin.propTypes = {};\n\nexport default Login;","/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/context/alert/AlertState.js",[],"/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/context/alert/alertsContext.js",[],"/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/context/alert/alertReducer.js",["137"],"import {\n  SET_ALERT,\n  REMOVE_ALERT,\n} from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case SET_ALERT:\n      return [...state, action.payload];\n    case REMOVE_ALERT:\n      return state.filter(alert => alert.id !== action.payload);\n    default:\n      return state;\n  }\n};","/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/components/layout/Alerts.js",["138"],"import React, {useContext} from 'react';\nimport PropTypes from 'prop-types';\nimport AlertContext from '../../context/alert/alertsContext';\n\nconst Alerts = () => {\n  const alertContext = useContext(AlertContext);\n\n  return (\n    alertContext.alerts.length > 0 && alertContext.alerts.map(alert => (\n      <div key={alert.id} className={`alert alert-${alert.type}`}>\n        <i className='fas fa-info-circle' /> {alert.msg}\n      </div>\n    ))\n  );\n};\n\nAlerts.propTypes = {};\n\nexport default Alerts;","/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/utils/setAuthToken.js",[],"/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/components/routing/PrivateRoute.js",["139"],"import React, {useContext} from 'react';\nimport PropTypes from 'prop-types';\nimport AuthContext from '../../context/auth/authContext';\nimport {Route, Redirect} from 'react-router-dom';\n\n// eslint-disable-next-line react/prop-types\nconst PrivateRoute = ({component: Component, ...rest}) => {\n  const authContext = useContext(AuthContext);\n  const {isAuthenticated, loading} = authContext;\n\n  return (\n    <Route\n      {...rest}\n      render={props => !isAuthenticated && !loading ? (\n        <Redirect to='/login'/>\n      ) : (\n        <Component {...props} />\n      )}\n    />\n  );\n};\n\nPrivateRoute.propTypes = {};\n\nexport default PrivateRoute;","/Users/tomys/Documents/Projekty/Front-end/contact-keeper/client/src/components/layout/Spinner.js",["140"],"import React, {Fragment} from 'react';\nimport spinner from './spinner.gif';\n\n// eslint-disable-next-line react/display-name\nexport default () => (\n  <Fragment>\n    <img\n      src={spinner}\n      style={{width: '200px', margin: 'auto', display: 'block'}}\n      alt='Loading...'\n    />\n  </Fragment>\n);",{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":17},{"ruleId":"145","severity":1,"message":"146","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":17},{"ruleId":"145","severity":1,"message":"149","line":18,"column":8,"nodeType":"147","messageId":"148","endLine":18,"endColumn":17},{"ruleId":"145","severity":1,"message":"150","line":60,"column":13,"nodeType":"147","messageId":"148","endLine":60,"endColumn":16},{"ruleId":"151","severity":1,"message":"152","line":12,"column":1,"nodeType":"153","endLine":77,"endColumn":3},{"ruleId":"145","severity":1,"message":"146","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":17},{"ruleId":"145","severity":1,"message":"146","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":17},{"ruleId":"145","severity":1,"message":"146","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":17},{"ruleId":"145","severity":1,"message":"154","line":12,"column":3,"nodeType":"147","messageId":"148","endLine":12,"endColumn":16},{"ruleId":"145","severity":1,"message":"155","line":13,"column":3,"nodeType":"147","messageId":"148","endLine":13,"endColumn":13},{"ruleId":"145","severity":1,"message":"156","line":14,"column":3,"nodeType":"147","messageId":"148","endLine":14,"endColumn":9},{"ruleId":"145","severity":1,"message":"154","line":6,"column":3,"nodeType":"147","messageId":"148","endLine":6,"endColumn":16},{"ruleId":"145","severity":1,"message":"155","line":7,"column":3,"nodeType":"147","messageId":"148","endLine":7,"endColumn":13},{"ruleId":"145","severity":1,"message":"156","line":8,"column":3,"nodeType":"147","messageId":"148","endLine":8,"endColumn":9},{"ruleId":"151","severity":1,"message":"152","line":12,"column":1,"nodeType":"153","endLine":56,"endColumn":3},{"ruleId":"145","severity":1,"message":"146","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":17},{"ruleId":"145","severity":1,"message":"146","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":17},{"ruleId":"151","severity":1,"message":"152","line":6,"column":1,"nodeType":"153","endLine":15,"endColumn":3},{"ruleId":"145","severity":1,"message":"146","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":17},{"ruleId":"145","severity":1,"message":"146","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":17},{"ruleId":"151","severity":1,"message":"152","line":5,"column":1,"nodeType":"153","endLine":13,"endColumn":3},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","'AuthState' is defined but never used.","'res' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'LOGIN_SUCCESS' is defined but never used.","'LOGIN_FAIL' is defined but never used.","'LOGOUT' is defined but never used.","no-global-assign","no-unsafe-negation"]